06/19/23
This project uses a RPi3B to toggle a GPIO pin and sample the chgs using a pico 
programmed to be a logic-analyzer.
Several different repos were used to generate a vcd file from the output of the pico.
In the https://github.com/develone/raspberrypi-gpio are the blink & dist folder which are
used to blink a GPIO pin on and off. In the dist folder delays are adjusted to control the
width of the GPIO pin. 

The dev branch is used to https://github.com/develone/rp2040-freertos-project/tree/
dev/rp2040-logic-analyzer to create rp2040-logic-analyzer.uf2 or
rp2040-logic-analyzer.elf

In ter1

devel@pi4-ultibo:~ $ rm -rf 4ch.csv

devel@pi4-ultibo:~ $ minicom

Welcome to minicom 2.8

OPTIONS: I18n 
Port /dev/ttyACM0, 17:00:01

Press CTRL-A Z for help on special keys

Unknown command
p# - Set the first pin to receive capture data
n# - Set how many pins to receive capture data
f# - Set the freqency to capture data at in Hz
t(1)(0) - Set the trigger to high or low
    Trigger happens off first pin
s# - Set how many samples to capture
g - Go!
p17
Start pin is 17
n4
Total pins is 4
s250000
Sample number is 250000
f1000000                                                                        
Frequency is 1000000 div is 125.000000                                          
t1                                                                              
Trigger set to 1

Capture to which file?
4ch.csv 

g		pico led turns on which indicates Arming trigger.

In ter2
https://github.com/develone/raspberrypi-gpio/blob/master/dist/dist_pigpio.c
https://github.com/develone/raspberrypi-gpio/blob/master/dist/Makefile Used to create
pigpio 
devel@pi4-ultibo:~/raspberrypi-gpio/blink $ sudo ./pigpio    pico led blinks 25000 samples. 

Capture file
Close

data requires preparation to be used in a  vcd file.
g
Clock speed is   125000000
Capture speed is 1000000.000000.2
Arming trigger	When sudo ./pigpio in ter2 is execute 25000 of 4ch are taken pico led blinks.
1,0,0,0,
1,0,0,0,
0,0,0,0,
1,0,0,0,
0,0,0,0,
1,0,0,0,
0,0,0,0,
1,0,0,0,
1,0,0,0,
0,0,0,0,
1,0,0,0,
0,0,0,0,
1,0,0,0,
0,0,0,0,

last comma in each line needs to be removed.

Esc:1,$ s/1,0,0,0,/1,0,0,0/g
24011 substitutions on 204473 lines

Esc:1,$ s/0,0,0,0,/0,0,0,0/g
225989 substitutions on 126864 lines
1G Remove the first few lines before the csv data which are 250000 samples.
g
Clock speed is   125000000
Capture speed is 1000000.000000.2
Arming trigger
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0

Esc:wq
Now the file 4ch.csv 
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0
1,0,0,0

The data in file 4ch.csv needs to be processed with C code found 
https://raw.githubusercontent.com/develone/generate-vcd/master/sample/4ch.c &
https://github.com/develone/generate-vcd/blob/master/sample/4ch.h
gcc 4ch.c -o 4ch
./4ch > xx in the folder where 4ch.csv is found. Then 4ch_header.vcd are merged into test2.vcd
https://github.com/develone/generate-vcd/blob/master/sample/4ch_header.vcd

devel@pi4-ultibo:~/generate-vcd/sample $ cat 4ch_header.vcd xx > test2.vcd
#0
1
0
0
0
#1
1
0
0
0
#2
0
0
0
0
#3
1
0
0
0


#249996
1
0
0
0
#249997
0
0
0
0
#249998
1
0
0
0
#249999
0
0
0
0

